{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const counterSomeThing = createSlice({\n  name: \"counter\",\n  initialState: {\n    value: {}\n  },\n  reducers: {\n    increment: state => {\n      state.value += 1;\n    },\n    decrement: state => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n    addNewKeyValuePair: (state, action) => {\n      const {\n        key,\n        value\n      } = action.payload;\n      state.value = { ...state.value,\n        [key]: value\n      };\n    }\n  }\n});\nexport const {\n  increment,\n  decrement,\n  incrementByAmount,\n  addNewKeyValuePair\n} = counterSomeThing.actions;\nexport default counterSomeThing.reducer;","map":{"version":3,"sources":["/Users/jkumarva/stage-client-app/src/feature/commonState.js"],"names":["createSlice","counterSomeThing","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","addNewKeyValuePair","key","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,gBAAgB,GAAGD,WAAW,CAAC;AAC1CE,EAAAA,IAAI,EAAE,SADoC;AAE1CC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE;AADK,GAF4B;AAK1CC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAGC,KAAD,IAAW;AACpBA,MAAAA,KAAK,CAACH,KAAN,IAAe,CAAf;AACD,KAHO;AAIRI,IAAAA,SAAS,EAAGD,KAAD,IAAW;AACpBA,MAAAA,KAAK,CAACH,KAAN,IAAe,CAAf;AACD,KANO;AAORK,IAAAA,iBAAiB,EAAE,CAACF,KAAD,EAAQG,MAAR,KAAmB;AACpCH,MAAAA,KAAK,CAACH,KAAN,IAAeM,MAAM,CAACC,OAAtB;AACD,KATO;AAURC,IAAAA,kBAAkB,EAAE,CAACL,KAAD,EAAQG,MAAR,KAAmB;AACrC,YAAM;AAAEG,QAAAA,GAAF;AAAOT,QAAAA;AAAP,UAAiBM,MAAM,CAACC,OAA9B;AACAJ,MAAAA,KAAK,CAACH,KAAN,GAAc,EAAE,GAAGG,KAAK,CAACH,KAAX;AAAkB,SAACS,GAAD,GAAOT;AAAzB,OAAd;AACD;AAbO;AALgC,CAAD,CAApC;AAsBP,OAAO,MAAM;AAAEE,EAAAA,SAAF;AAAaE,EAAAA,SAAb;AAAwBC,EAAAA,iBAAxB;AAA2CG,EAAAA;AAA3C,IACXX,gBAAgB,CAACa,OADZ;AAGP,eAAeb,gBAAgB,CAACc,OAAhC","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const counterSomeThing = createSlice({\n  name: \"counter\",\n  initialState: {\n    value: {},\n  },\n  reducers: {\n    increment: (state) => {\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n    addNewKeyValuePair: (state, action) => {\n      const { key, value } = action.payload;\n      state.value = { ...state.value, [key]: value };\n    },\n  },\n});\n\nexport const { increment, decrement, incrementByAmount, addNewKeyValuePair } =\n  counterSomeThing.actions;\n\nexport default counterSomeThing.reducer;\n"]},"metadata":{},"sourceType":"module"}